The ``print_square`` module
======================

Using ``print_square``
-------------------

Importing the function from the module:
	>>> print_square = __import__("4-print_square").print_square

Checking for module docstring:
	 >>> m = __import__("4-print_square").__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:
	 >>> f = __import__("4-print_square").print_square.__doc__
         >>> len(f) > 1
         True

Checking for PEP8:
	 >>> import os
	 >>> os.popen("pep8 4-print_square.py").read()
	 ''

Checking for last blank line:
	 >>> os.popen("cat -e 4-print_square.py | tail -1").read()[-1]
	 '\n'

Cheking with 4
    >>> print_square(4)
    ####
    ####
    ####
    ####

Cheking with 10
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Cheking with 0
    >>> print_square(0)

Cheking with 1
    >>> print_square(1)
    #

Cheking with -1
    >>> try:
    ...     print_square(-1)
    ... except Exception as e:
    ...     print(e)
    size must be >= 0

Cheking with other type
    >>> try:
    ...     print_square("12")
    ... except Exception as e:
    ...     print(e)
    size must be an integer

Cheking with negative float
    >>> try:
    ...     print_square(-12.7)
    ... except Exception as e:
    ...     print(e)
    size must be an integer

Cheking with list
    >>> try:
    ...     print_square([1, 2, 3, "4", ("5", "6")])
    ... except Exception as e:
    ...     print(e)
    size must be an integer
